<%- include partials/head.ejs %>      
<%- include partials/navbar.ejs %> 
<link rel="stylesheet" type="text/css" href="../../styles/user_profile.css">
<script src="https://d3js.org/d3.v4.min.js"></script>
<body>
    <div class="wrapper">                  
        <div class="row profile-section-1">
            <div class="col-md-6" id="block" style="margin-top: 200px;">
            </div>
            <div class="col-md-4 favorite-list">
                <div class="favorite-row">      
                    <% if(details.favorites){
                        Object.keys(details.favorites).forEach(function (id) {
                            var favorite = details.favorites[id] %> 
                            <p> <%= favorite.city %> </p>
                        <% }) %>
                    <% } else { %>
                        <p>No favorite cities to display.</p>
                    <%}%>  
                </div>             
            </div>
            <div class="col-md-2">
                <h4><%= details.username %></h4>
                <p><%= details.city%></p>
            </div>
        </div>  
        <div class="recommended-cities">
            <h3>Recommeded cities</h3>
        </div>
       
    <script>
        var data =
        [{
          "city" : "Manchester",
          "population" : "2459200",
          "timestamp" : 1525102364035
        },
        {
          "city" : "Coventry",
          "population" : "352900",
          "timestamp" : 1525102377250
        },
         {
          "city" : "Southampton",
          "population" : "383900",
          "timestamp" : 1525102385520
        },
        {
          "city" : "Blackpool",
          "population" : "217200",
          "timestamp" : 1525102524910
        }];
      
    // console.log(data);
    var ceva = [];
    
    
    // http://bl.ocks.org/feyderm/03602b83146d69b1b6993e5f98123175 
    data.map(x => {
        ceva.push( parseInt(x["population"]));
    });

    console.log(ceva);

        // dimensions
        var margin = { top: 20, right: 20, bottom: 0, left: 0 },
            svg_dx = 750, 
            svg_dy = 100
            chart_dx = svg_dx - margin.right - margin.left,
            chart_dy = svg_dy - margin.top - margin.bottom;

        // data
        var y = d3.randomNormal(11, 10);
        var x_jitter = d3.randomUniform(0, 1);
        var d = d3.range(data.length).map(function() { 
                    return [x_jitter(), y()]; 
                });

        var colorScale = d3.scaleLinear()
                            .domain(d3.extent(d, function(d) { return d[1]; }))
                            .range([0, 1]);


        var yScale  = d3.scaleLinear().domain([d3.min(ceva, c => { return c/10000;}), d3.max(ceva, c => {return c/10000;})+500]).range([0, margin.top]);
        var yAxis = d3.axisLeft(yScale);

        // zoom
        var svg = d3.select("#block")
                    .append("svg")
                    .attr("width", svg_dx)
                    .attr("height", svg_dy)


    //    function getRandomColor() {
    //         var letters = '0123456789ABCDEF';
    //         var color = '#';
    //         for (var i = 0; i < 6; i++) {
    //             color += letters[Math.floor(Math.random() * 16)];
    //         }
    //         return color;
    //     }

        // plot data
        var circles = svg.append("g")
                        .attr("id", "circles")
                        .attr("transform", "translate(80, 0)")
                        .selectAll("circle")
                        .data(ceva)
                        .enter()
                        .append("circle")
                        .attr("r", 8)
                        .attr("cy", function(c) { return 10; })
                        .attr("cx", function(c) { return c/10000; })
                        .style("fill", function(c) { 
                            var norm_color = colorScale(c/1000);
                            return d3.interpolateInferno(norm_color) 
                        });

        // // add y-axis
        // var x_axis = svg.append("g")
        //                 .attr("id", "x_axis")
        //                 .attr("transform", "translate(75,0)")
        //                 .call(yAxis)  
</script>
</body>    